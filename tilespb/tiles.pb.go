// Proto definitions for Tiles configs

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: tiles.proto

package tilespb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Represents a Tiles config.
type TilesConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of tmux sessions.
	TmuxSession []*TmuxSession `protobuf:"bytes,1,rep,name=tmux_session,json=tmuxSession,proto3" json:"tmux_session,omitempty"`
}

func (x *TilesConfig) Reset() {
	*x = TilesConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TilesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TilesConfig) ProtoMessage() {}

func (x *TilesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tiles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TilesConfig.ProtoReflect.Descriptor instead.
func (*TilesConfig) Descriptor() ([]byte, []int) {
	return file_tiles_proto_rawDescGZIP(), []int{0}
}

func (x *TilesConfig) GetTmuxSession() []*TmuxSession {
	if x != nil {
		return x.TmuxSession
	}
	return nil
}

// Represents the configuration of a tmux session.
type TmuxSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the tmux session.
	Name   string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Window []*TmuxSession_Window `protobuf:"bytes,2,rep,name=window,proto3" json:"window,omitempty"`
}

func (x *TmuxSession) Reset() {
	*x = TmuxSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxSession) ProtoMessage() {}

func (x *TmuxSession) ProtoReflect() protoreflect.Message {
	mi := &file_tiles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxSession.ProtoReflect.Descriptor instead.
func (*TmuxSession) Descriptor() ([]byte, []int) {
	return file_tiles_proto_rawDescGZIP(), []int{1}
}

func (x *TmuxSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TmuxSession) GetWindow() []*TmuxSession_Window {
	if x != nil {
		return x.Window
	}
	return nil
}

// Represents the configuration of a tmux window.
type TmuxSession_Window struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The window name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The working directory of the window.
	Dir string `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
}

func (x *TmuxSession_Window) Reset() {
	*x = TmuxSession_Window{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxSession_Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxSession_Window) ProtoMessage() {}

func (x *TmuxSession_Window) ProtoReflect() protoreflect.Message {
	mi := &file_tiles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxSession_Window.ProtoReflect.Descriptor instead.
func (*TmuxSession_Window) Descriptor() ([]byte, []int) {
	return file_tiles_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TmuxSession_Window) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TmuxSession_Window) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

var File_tiles_proto protoreflect.FileDescriptor

var file_tiles_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74,
	0x69, 0x6c, 0x65, 0x73, 0x70, 0x62, 0x22, 0x46, 0x0a, 0x0b, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x6d, 0x75, 0x78, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69,
	0x6c, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x6d, 0x75, 0x78, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x86,
	0x01, 0x0a, 0x0b, 0x54, 0x6d, 0x75, 0x78, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x6d, 0x75,
	0x78, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52,
	0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x1a, 0x2e, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x76, 0x69, 0x64, 0x7a, 0x63, 0x68, 0x65, 0x6e,
	0x2f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tiles_proto_rawDescOnce sync.Once
	file_tiles_proto_rawDescData = file_tiles_proto_rawDesc
)

func file_tiles_proto_rawDescGZIP() []byte {
	file_tiles_proto_rawDescOnce.Do(func() {
		file_tiles_proto_rawDescData = protoimpl.X.CompressGZIP(file_tiles_proto_rawDescData)
	})
	return file_tiles_proto_rawDescData
}

var file_tiles_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tiles_proto_goTypes = []interface{}{
	(*TilesConfig)(nil),        // 0: tilespb.TilesConfig
	(*TmuxSession)(nil),        // 1: tilespb.TmuxSession
	(*TmuxSession_Window)(nil), // 2: tilespb.TmuxSession.Window
}
var file_tiles_proto_depIdxs = []int32{
	1, // 0: tilespb.TilesConfig.tmux_session:type_name -> tilespb.TmuxSession
	2, // 1: tilespb.TmuxSession.window:type_name -> tilespb.TmuxSession.Window
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tiles_proto_init() }
func file_tiles_proto_init() {
	if File_tiles_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tiles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TilesConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxSession_Window); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tiles_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tiles_proto_goTypes,
		DependencyIndexes: file_tiles_proto_depIdxs,
		MessageInfos:      file_tiles_proto_msgTypes,
	}.Build()
	File_tiles_proto = out.File
	file_tiles_proto_rawDesc = nil
	file_tiles_proto_goTypes = nil
	file_tiles_proto_depIdxs = nil
}
